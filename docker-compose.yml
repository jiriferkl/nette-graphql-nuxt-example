services:
  php1:
    build:
      context: .docker/php
    networks:
      - backend
    volumes:
      - ./backend/:/var/www/html/
    environment:
      NETTE_ENV: dev
      NETTE_DEBUG: 0

  php2:
    build:
      context: .docker/php
    networks:
      - backend
    volumes:
      - ./backend/:/var/www/html/
    environment:
      NETTE_ENV: dev
      NETTE_DEBUG: 0

  nginx:
    build:
      context: .docker/nginx
    ports:
      - "8080:80"
    networks:
      - backend
      - frontend
    volumes:
      - ./backend/:/var/www/html/

  db:
    image: mysql:latest
    ports:
      - "3306:3306"
    networks:
      - backend
    volumes:
      - ./.docker/temp/db:/var/lib/mysql
      - ./.docker/mysql/conf.d:/etc/mysql/conf.d
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: georgina

  node:
    image: node:16.19.0
    ports:
      - "80:3000"
      - "24678:24678" # HMR
    volumes:
      - ./frontend:/app
    working_dir: /app
    user: node
    command: bash -c "npm install && npm run dev"
    networks:
      - frontend

  elastic:
    image: elasticsearch:8.5.3
    ports:
      - "9200:9200"
    networks:
      - backend
    volumes:
      - ./.docker/temp/elastic:/usr/share/elasticsearch/data
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node

  maxwell:
    image: zendesk/maxwell:v1.39.4
    networks:
      - backend
    environment:
      MYSQL_USERNAME: maxwell
      MYSQL_PASSWORD: maxwell1234
      MYSQL_HOST: db
      PRODUCER: rabbitmq
    command: bash -c 'bin/maxwell --user=$${MYSQL_USERNAME} --password=$${MYSQL_PASSWORD} --host=$${MYSQL_HOST} --producer=$${PRODUCER} --rabbitmq_host='rabbitmq''

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "15672:15672"
    networks:
      - backend
    volumes:
      - ./.docker/temp/rabbitmq:/var/lib/rabbitmq

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge
