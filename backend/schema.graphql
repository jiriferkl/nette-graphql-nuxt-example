schema {
  query: Query
}

type Query {
  product(id: ID!): Product!
  products(pagination: Pagination): ProductConnection!
}

type ProductConnection {
  totalCount: Int!
  edges: [ProductEdge]!
  pageInfo: PageInfo!
}

type ProductEdge {
  cursor: String!
  node: Product!
}

type Product {
  id: ID!
  name: String!
  shortDescription: String!
  fullDescription: String!
  currentPrice: String!
  originalPrice: String!
  discount: Int!
  studio: Studio!
  productPlatform: ProductPlatform!
  productEdition: ProductEdition!
}

type ProductEdition {
  id: ID!
  name: String!
  product: Product!
}

type Studio {
  id: ID!
  name: String!
}

type ProductPlatform {
  id: ID!
  product: Product!
  platform: Platform!
}

type Platform {
  id: ID!
  name: String!
}

type PageInfo {
  hasNextPage: Boolean!
  endCursor: String
}

input Pagination {
  first: Int,
  after: String,
}
